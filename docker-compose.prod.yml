version: "3.9"
networks:
  JobTest:
    name: JobTest
    driver: bridge

services:
  server:
    build:
      context: .
      dockerfile: Dockerfile-nginx
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: JobTestServer
    ports:
      - ${NGINX_PORT:-80}:80
    networks:
      - JobTest
    links:
      - app

  app:
    build:
      context: .
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    container_name: JobTestApp
    working_dir: /var/www/html
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      - JobTest
    volumes:
      - ./src:/var/www/html
      - ./docker/home:/home/www-data
    restart: unless-stopped
    links:
      - redis
      - db

  redis:
    image: redis:7
    user: ${GID:-1000}:${UID:-1000}
    container_name: JobTestRedis
    restart: unless-stopped
    volumes:
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./docker/redis/data:/tmp/data
    networks:
      - JobTest
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "${REDIS_PORT:-6379}:6379"

  db:
    image: mysql:8
    user: ${GID:-1000}:${UID:-1000}
    container_name: JobTestDB
    ports:
      - ${DB_PORT:-3306}:3306
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-job_test}
      MYSQL_USER: ${DB_USERNAME:-job_test}
      MYSQL_PASSWORD: ${DB_PASSWORD:-job_test_secret}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-job_test_secret}
    networks:
      - JobTest
    volumes:
      - ./docker/mysql:/var/lib/mysql